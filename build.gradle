plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "io.freefair.lombok" version "3.7.5"
    id 'checkstyle'
    id 'pmd'
    id "com.github.spotbugs" version "2.0.0"
}

group = 'com.mercadolibre'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

mainClassName = 'com.mercadolibre.planning.model.api.PlanningModelApplication'

repositories {
		maven { url "http://maven.artifacts.furycloud.io/repository/all" }
	}

dependencies {
    implementation 'com.fury:furyutils:0.0.2'
    implementation 'com.mercadolibre.fbm.wms.outbound:commons:0.1.6'
    implementation "com.mercadolibre.restclient:meli-restclient-default:0.3.53"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.newrelic.agent.java:newrelic-api:6.4.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    testImplementation "com.mercadolibre.restclient:meli-restclient-core:0.3.52:tests"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'

    compile group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.1.7.RELEASE'

    runtime 'com.h2database:h2'
    runtime "mysql:mysql-connector-java:8.0.21"

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.8.0'
    spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.4.3.sb'
}

bootJar {
    archiveFileName = 'application.jar'
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

checkstyle {
    toolVersion "8.24"
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-style.xsl')
    }
}

pmd {
    toolVersion = '6.17.0'
    ruleSetFiles = files("config/pmd/pmd_rules.xml")
    ruleSets = []
    incrementalAnalysis = true
}

tasks.withType(Pmd) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

spotbugs {
    toolVersion = '3.1.12'
    excludeFilter = file("config/spotbugs/excludeFilter.xml")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/PlanningModelApplication**',
                    '**/config/**',
                    '**/domain/entity/current/**',
                    '**/domain/entity/forecast/**'
            ])
        }))
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/PlanningModelApplication**',
                    '**/config/**',
                    '**/logging/**',
                    '**/domain/entity/current/**',
                    '**/domain/entity/forecast/**'

            ])
        }))
    }
}

task installGitHooks(type: Copy) {
    from new File(rootProject.rootDir, "git_hooks/pre-push")
    into { new File(rootProject.rootDir, ".git/hooks") }
}

check.dependsOn jacocoTestCoverageVerification
check.dependsOn jacocoTestReport
check.dependsOn installGitHooks
