plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.mercadolibre'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 17
targetCompatibility = 17

mainClassName = 'com.mercadolibre.planning.model.api.PlanningModelApplication'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
		maven { url "https://maven.artifacts.furycloud.io/repository/all" }
	}

//dependencyManagement {
//    imports {
//        mavenBom 'com.fasterxml.jackson:jackson-bom:2.13.2'
//    }
//}
dependencies {
    // managed by meLi BOM
    implementation 'com.mercadolibre.fbm.flow:projection-tools:2.0.0'
    implementation platform('com.mercadolibre.library:java-melitk-bom:1.1.12')
    implementation "com.mercadolibre:routing"
    implementation "com.mercadolibre:threading"
    implementation "com.mercadolibre.restclient:meli-restclient-default"
    implementation 'com.newrelic.agent.java:newrelic-api'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.fury:furyutils'
    implementation 'com.mercadolibre.metrics:metrics-core'
    implementation 'com.mercadolibre.metrics:datadog-metric-wrapper'
    constraints {
        implementation('commons-io:commons-io:2.7') {
            because 'previous versions have a vulnerability CFWPM-57'
        }
    }

    // Meli unmanaged
    implementation 'com.mercadolibre.fbm.wms.outbound:commons:1.2.0'

    // managed by spring BOM
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    compileOnly 'org.springframework:spring-context-support'

    runtimeOnly 'mysql:mysql-connector-java:8.0.33'

    if (project.hasProperty('env') && project.getProperty('env') == 'dev') {
        developmentOnly 'com.h2database:h2'
    }

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'com.mercadolibre.restclient:meli-restclient-core:1.0.14:tests' // TODO omitir versi√≥n
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

bootJar {
    archiveFileName = 'application.jar'
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/PlanningModelApplication**',
                    '**/config/**',
                    '**/domain/entity/current/**',
                    '**/domain/entity/forecast/**',
            ])
        }))
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/PlanningModelApplication**',
                    '**/config/**',
                    '**/logging/**',
                    '**/domain/entity/current/**',
                    '**/domain/entity/forecast/**'

            ])
        }))
    }
}
